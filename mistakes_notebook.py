# day 01 - 1.操作系统的作用?
# 控制和管理系统资源的使用，合理组织计算机内部各部件协调工作，为用户提供操作和编辑界面的程序集合。

# day 01 - 3.列举你了解的编码及他们之间的区别？
# 区别：
# ASCII：用8位表示一个东西；
# Unicode：用32位表示一个东西；
# GBK：支持中文编码，中英字符均使用双字节表示，中文最高位都是1，通用性差，比utf8数据库小；
# UTF-8：对Unicode进行压缩，用尽量少的位数表示一个东西，取8的倍数，英文使用8位（即一个字节），中文使用24为（三个字节）来编码。UTF-8包含全世界所有国家需要用到的字符，是国际编码，通用性强。；

# day 05 - 2.请将列表中的每个元素通过 "_" 链接起来。
users = ['李少奇','李启航',666,'渣渣辉']
users[2] = str(users[2])
print('_'.join(users))

# day 06 - 19.看代码写结果并解释原因
info = [1,2,3]
userinfo = {'account':info, 'num':info, 'money':info}

info.append(9)
print(userinfo) # {'account': [1, 2, 3, 9], 'num': [1, 2, 3, 9], 'money': [1, 2, 3, 9]}

info = "题怎么这么多"
print(userinfo) # {'account': [1, 2, 3, 9], 'num': [1, 2, 3, 9], 'money': [1, 2, 3, 9]}
# 第一个输出  因为开辟空间后,info在第二层内存地址进行了修改,所以userinfo也发生了改变
# 第二个输出  因为info指向了另一个内存地址,但userinfo没有发生改变

# day 07 - 2.看代码写结果
v1 = [1,2,3,4,5]
v2 = [v1,v1,v1]

v2[1][0] = 111
v2[2][0] = 222
print(v1) # [1,2,3,4,5]
print(v2) # [[222,2,3,4,5],[222,2,3,4,5,6],[222,2,3,4,5,6]]

# day 07 - 4.简述深浅拷贝？
# 深拷贝，所有重新创建一份（内存ID改变），改变新文件，旧文件不会改变。浅拷贝，改变新文件，旧文件跟着改变
# 深拷贝，在内存中将所有的数据重新创建一份，值的存放位置不变。浅拷贝，在内存中只额外创建第一层数据，值的存放位置不变

# day 07 - 14 - 3. 请将info中的所有键和值按照 "键|值,键|值,键|值" 拼接起来并写入到文件 "readme.txt" 文件中。
info = {'name':'骗子','age':18,'gender':'性别'} 
info['age'],s = '18',''
f = open("readme.txt",'a',encoding='utf-8')
for i,j in info.items():
    s += i+'|'+j+','
f.write(s[:-1])

# day 10 - 3
    # c. 请将执行函数，并实现让args的值为 ([11,22],33) 且 kwargs的值为{'k1':'v1','k2':'v2'}
func([11,22],33,k1 ='v1',k2 ='v2')
   # d. 如执行 func(*{'武沛齐','金鑫','女神'})，请问 args和kwargs的值分别是？
# arg = ('女神', '金鑫', '武沛齐'), kwarg = {}
   # e. 如执行 func({'武沛齐','金鑫','女神'},[11,22,33])，请问 args和kwargs的值分别是？
# arg = ({'武沛齐','金鑫','女神'},[11,22,33]), kwarg = {}
   # f. 如执行 func('武沛齐','金鑫','女神',[11,22,33],**{'k1':'栈'})，请问 args和kwargs的值分别是？
# arg = ('武沛齐','金鑫','女神',[11,22,33]), kwarg = {'k1':'栈'}



day 01 - 